{"version":3,"sources":["components/Poruka.js","services/poruke.js","App.js","index.js"],"names":["Poruka","poruka","promjenaVaznosti","brisiPoruku","oznaka","vazno","sadrzaj","onClick","osnovniUrl","axios","get","noviObjekt","post","id","put","delete","App","useState","poruke","postaviPoruke","unosPoruke","postaviUnos","ispisSve","postaviIspis","porukeZaIspis","filter","el","useEffect","console","log","porukeServer","then","response","data","map","p","find","modPoruka","promjenaVaznostiPoruke","onSubmit","e","preventDefault","datum","Date","toUTCString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"qJAQeA,EAPD,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,iBAAiBC,EAAgB,EAAhBA,YACjCC,EAASH,EAAOI,MAAQ,qBAAuB,mBACnD,OAAO,+BAAKJ,EAAOK,QACnB,wBAAQC,QAASL,EAAjB,SAAoCE,IACpC,wBAAQG,QAASJ,EAAjB,mB,gBCJEK,EAAY,mCAoBH,EAjBI,WACf,OAAOC,IAAMC,IAAIF,IAgBN,EAbA,SAAAG,GACX,OAAOF,IAAMG,KAAKJ,EAAYG,IAYnB,EATC,SAACE,EAAIF,GACjB,OAAOF,IAAMK,IAAN,UAAaN,EAAb,YAA2BK,GAAMF,IAQ7B,EAJD,SAAAE,GACV,OAAOJ,IAAMM,OAAN,UAAgBP,EAAhB,YAA8BK,KCoDxBG,EAlEL,WACR,MAA8BC,mBAAS,IAAvC,mBAAMC,EAAN,KAAcC,EAAd,KAeA,EAA8BF,mBAAS,mBAAvC,mBAAMG,EAAN,KAAiBC,EAAjB,KAKA,EAA+BJ,oBAAS,GAAxC,mBAAOK,EAAP,KAAiBC,EAAjB,KACMC,EAAeF,EAAWJ,EAASA,EAAOO,QAAO,SAAAC,GAAE,OAAa,IAAXA,EAAGrB,SAC9DsB,qBAAU,WACRC,QAAQC,IAAI,eACZC,IAA0BC,MAAK,SAAAC,GAAYb,EAAca,EAASC,WAElE,IAsBF,OAEE,gCACE,wCACA,yBAAQ1B,QAAS,kBAAIgB,GAAcD,IAAnC,0BAAuDA,EAAW,kBAAc,SAChF,6BACGE,EAAcU,KAAI,SAAAC,GAAC,OAAE,cAAC,EAAD,CAAmBlC,OAAQkC,EAAGjC,iBAAkB,kBAnBjD,SAACW,GAE9B,IAAMZ,EAASiB,EAAOkB,MAAK,SAAAD,GAAC,OAAIA,EAAEtB,KAAOA,KACnCwB,EAAS,2BACVpC,GADU,IAEbI,OAAQJ,EAAOI,QAIlByB,EAAqBjB,EAAGwB,GAAWN,MAAK,SAAAC,GACnCb,EAAcD,EAAOgB,KAAI,SAAAC,GAAC,OAAIA,EAAEtB,KAAOA,EAAKsB,EAAIH,EAASC,YASqBK,CAAuBH,EAAEtB,KAAKV,YAAa,kBA3BnGU,EA2BsHsB,EAAEtB,QA1B9IiB,EACSjB,GACNkB,MAAM,SAAAC,GACLJ,QAAQC,IAAIG,GACZb,EAAcD,EAAOO,QAAO,SAAAU,GAAC,OAAIA,EAAEtB,KAAOA,SALzB,IAACA,IA2BiBsB,EAAEtB,SAEvC,uBAAM0B,SAvDO,SAACC,GACdA,EAAEC,iBAEF,IAAM9B,EAAa,CACfL,QAASc,EACTsB,OAAO,IAAIC,MAAOC,cAClBvC,MAAOwC,KAAKC,OAAQ,IAKzBhB,EAAoBnB,GAAYoB,MAAK,SAAAC,GAAWb,EAAcD,EAAO6B,OAAOpC,IAC3EU,EAAY,QA2CZ,UACI,uBAAO2B,MAAO5B,EAAa6B,SAzCd,SAACT,GAClBZ,QAAQC,IAAIW,EAAEU,OAAOF,OACrB3B,EAAYmB,EAAEU,OAAOF,UAwCjB,wBAAQG,KAAK,SAAb,2BC1DZC,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,W","file":"static/js/main.086c214e.chunk.js","sourcesContent":["import React from 'react'\r\nconst Poruka =({poruka, promjenaVaznosti,brisiPoruku}) =>{\r\n  const oznaka = poruka.vazno ? 'oznaci kao nevazno' : 'oznaci kao vazno'\r\n    return(<li>{poruka.sadrzaj}\r\n    <button onClick={promjenaVaznosti}>{oznaka}</button>\r\n    <button onClick={brisiPoruku}>-</button>\r\n    </li>)}\r\n\r\nexport default Poruka","import axios from 'axios';\r\nconst osnovniUrl ='http://localhost:3001/api/poruke'\r\n\r\n\t\r\nconst dohvatiSve = () => {\r\n    return axios.get(osnovniUrl);\r\n}\r\n \r\nconst stvori = noviObjekt => {\r\n    return axios.post(osnovniUrl, noviObjekt)\r\n}\r\n \r\nconst osvjezi = (id, noviObjekt) => {\r\n    return axios.put(`${osnovniUrl}/${id}`, noviObjekt)\r\n}\r\n \r\n\t\r\nconst brisi = id => {\r\n    return axios.delete(`${osnovniUrl}/${id}`)\r\n}\r\n \r\nexport default { dohvatiSve, stvori, osvjezi, brisi}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Poruka from './components/Poruka';\r\nimport porukeServer from './services/poruke'\r\n\r\nconst App = () => {\r\n    const[poruke, postaviPoruke] =useState([])\r\n    const novaPoruka=(e)=>{ //eventhandler poruke kao ulazni argument primaju objekt koji sadrži sve informacije o događaju\r\n        e.preventDefault() //kako nam se ne bi onsite pozvao\r\n       // console.log(\"KLik\",e.target)\r\n        const noviObjekt = {\r\n            sadrzaj: unosPoruke,\r\n            datum: new Date().toUTCString(),\r\n            vazno: Math.random >0.5\r\n        }\r\n        //Umjesto update-anja stanja želim poslati zahtjev serveru da spremi taj moj podatak\r\n       // postaviPoruke(poruke.concat(noviObjekt))\r\n        //postaviUnos(\"\") //da maknemo iz kucice inputa tekst\r\n       porukeServer.stvori(noviObjekt).then(response=>{postaviPoruke(poruke.concat(noviObjekt))\r\n        postaviUnos(\"\")})\r\n    }\r\n    const[unosPoruke,postaviUnos]=useState(\"Unesi poruku...\")\r\n    const promjenaUnosa =(e) =>{\r\n        console.log(e.target.value)\r\n        postaviUnos(e.target.value)\r\n    }\r\n    const [ispisSve, postaviIspis]=useState(true)\r\n    const porukeZaIspis =ispisSve ? poruke : poruke.filter(el=>el.vazno===true)\r\n    useEffect(()=>{\r\n      console.log(\"Effect hook\")\r\n      porukeServer.dohvatiSve().then(response=> {postaviPoruke(response.data)\r\n      })\r\n    },[])\r\n    const brisanjePoruke = (id) => {\r\n      porukeServer\r\n        .brisi(id)\r\n        .then( response => {\r\n          console.log(response);\r\n          postaviPoruke(poruke.filter(p => p.id !== id))\r\n        })\r\n    }   \t\r\nconst promjenaVaznostiPoruke = (id) => {\r\n  //const url = `http://localhost:3001/poruke/${id}` //slash id ide dodatak\r\n  const poruka = poruke.find(p => p.id === id)\r\n  const modPoruka = {\r\n    ...poruka,\r\n    vazno: !poruka.vazno\r\n  }\r\n  \t\r\n\r\n porukeServer.osvjezi(id,modPoruka).then(response => {\r\n      postaviPoruke(poruke.map(p => p.id !== id ? p : response.data))\r\n    })\r\n}\r\n    return (\r\n        \r\n      <div>\r\n        <h1>Poruke</h1>\r\n        <button onClick={()=>postaviIspis(!ispisSve)}>Prikaži {ispisSve ? \"samo važne\": \"sve\" }</button>\r\n        <ul>\r\n          {porukeZaIspis.map(p=><Poruka key={p.id} poruka={p} promjenaVaznosti={()=>promjenaVaznostiPoruke(p.id)} brisiPoruku={()=>brisanjePoruke(p.id)}/>)}\r\n        </ul>\r\n        <form onSubmit={novaPoruka}>\r\n            <input value={unosPoruke}  onChange={promjenaUnosa}/>\r\n            <button type='submit'>Spremi</button>\r\n\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\t\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}